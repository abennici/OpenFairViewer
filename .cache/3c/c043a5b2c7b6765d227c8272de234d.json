{"id":"node_modules/cesium/Source/Shaders/GlobeVS.js","dependencies":[{"name":"D:\\Documents\\DEV\\ol6\\package.json","includedInParent":true,"mtime":1603819498857},{"name":"D:\\Documents\\DEV\\ol6\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1603819498545}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"#ifdef QUANTIZATION_BITS12\\n\\\nattribute vec4 compressed0;\\n\\\nattribute float compressed1;\\n\\\n#else\\n\\\nattribute vec4 position3DAndHeight;\\n\\\nattribute vec4 textureCoordAndEncodedNormals;\\n\\\n#endif\\n\\\n\\n\\\nuniform vec3 u_center3D;\\n\\\nuniform mat4 u_modifiedModelView;\\n\\\nuniform mat4 u_modifiedModelViewProjection;\\n\\\nuniform vec4 u_tileRectangle;\\n\\\n\\n\\\n// Uniforms for 2D Mercator projection\\n\\\nuniform vec2 u_southAndNorthLatitude;\\n\\\nuniform vec2 u_southMercatorYAndOneOverHeight;\\n\\\n\\n\\\nvarying vec3 v_positionMC;\\n\\\nvarying vec3 v_positionEC;\\n\\\n\\n\\\nvarying vec3 v_textureCoordinates;\\n\\\nvarying vec3 v_normalMC;\\n\\\nvarying vec3 v_normalEC;\\n\\\n\\n\\\n#ifdef APPLY_MATERIAL\\n\\\nvarying float v_slope;\\n\\\nvarying float v_aspect;\\n\\\nvarying float v_height;\\n\\\n#endif\\n\\\n\\n\\\n#if defined(FOG) || defined(GROUND_ATMOSPHERE) || defined(UNDERGROUND_COLOR) || defined(TRANSLUCENT)\\n\\\nvarying float v_distance;\\n\\\n#endif\\n\\\n\\n\\\n#if defined(FOG) || defined(GROUND_ATMOSPHERE)\\n\\\nvarying vec3 v_fogMieColor;\\n\\\nvarying vec3 v_fogRayleighColor;\\n\\\n#endif\\n\\\n\\n\\\n// These functions are generated at runtime.\\n\\\nvec4 getPosition(vec3 position, float height, vec2 textureCoordinates);\\n\\\nfloat get2DYPositionFraction(vec2 textureCoordinates);\\n\\\n\\n\\\nvec4 getPosition3DMode(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    return u_modifiedModelViewProjection * vec4(position, 1.0);\\n\\\n}\\n\\\n\\n\\\nfloat get2DMercatorYPositionFraction(vec2 textureCoordinates)\\n\\\n{\\n\\\n    // The width of a tile at level 11, in radians and assuming a single root tile, is\\n\\\n    //   2.0 * czm_pi / pow(2.0, 11.0)\\n\\\n    // We want to just linearly interpolate the 2D position from the texture coordinates\\n\\\n    // when we're at this level or higher.  The constant below is the expression\\n\\\n    // above evaluated and then rounded up at the 4th significant digit.\\n\\\n    const float maxTileWidth = 0.003068;\\n\\\n    float positionFraction = textureCoordinates.y;\\n\\\n    float southLatitude = u_southAndNorthLatitude.x;\\n\\\n    float northLatitude = u_southAndNorthLatitude.y;\\n\\\n    if (northLatitude - southLatitude > maxTileWidth)\\n\\\n    {\\n\\\n        float southMercatorY = u_southMercatorYAndOneOverHeight.x;\\n\\\n        float oneOverMercatorHeight = u_southMercatorYAndOneOverHeight.y;\\n\\\n\\n\\\n        float currentLatitude = mix(southLatitude, northLatitude, textureCoordinates.y);\\n\\\n        currentLatitude = clamp(currentLatitude, -czm_webMercatorMaxLatitude, czm_webMercatorMaxLatitude);\\n\\\n        positionFraction = czm_latitudeToWebMercatorFraction(currentLatitude, southMercatorY, oneOverMercatorHeight);\\n\\\n    }\\n\\\n    return positionFraction;\\n\\\n}\\n\\\n\\n\\\nfloat get2DGeographicYPositionFraction(vec2 textureCoordinates)\\n\\\n{\\n\\\n    return textureCoordinates.y;\\n\\\n}\\n\\\n\\n\\\nvec4 getPositionPlanarEarth(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    float yPositionFraction = get2DYPositionFraction(textureCoordinates);\\n\\\n    vec4 rtcPosition2D = vec4(height, mix(u_tileRectangle.st, u_tileRectangle.pq, vec2(textureCoordinates.x, yPositionFraction)), 1.0);\\n\\\n    return u_modifiedModelViewProjection * rtcPosition2D;\\n\\\n}\\n\\\n\\n\\\nvec4 getPosition2DMode(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    return getPositionPlanarEarth(position, 0.0, textureCoordinates);\\n\\\n}\\n\\\n\\n\\\nvec4 getPositionColumbusViewMode(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    return getPositionPlanarEarth(position, height, textureCoordinates);\\n\\\n}\\n\\\n\\n\\\nvec4 getPositionMorphingMode(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    // We do not do RTC while morphing, so there is potential for jitter.\\n\\\n    // This is unlikely to be noticeable, though.\\n\\\n    vec3 position3DWC = position + u_center3D;\\n\\\n    float yPositionFraction = get2DYPositionFraction(textureCoordinates);\\n\\\n    vec4 position2DWC = vec4(height, mix(u_tileRectangle.st, u_tileRectangle.pq, vec2(textureCoordinates.x, yPositionFraction)), 1.0);\\n\\\n    vec4 morphPosition = czm_columbusViewMorph(position2DWC, vec4(position3DWC, 1.0), czm_morphTime);\\n\\\n    return czm_modelViewProjection * morphPosition;\\n\\\n}\\n\\\n\\n\\\n#ifdef QUANTIZATION_BITS12\\n\\\nuniform vec2 u_minMaxHeight;\\n\\\nuniform mat4 u_scaleAndBias;\\n\\\n#endif\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n#ifdef QUANTIZATION_BITS12\\n\\\n    vec2 xy = czm_decompressTextureCoordinates(compressed0.x);\\n\\\n    vec2 zh = czm_decompressTextureCoordinates(compressed0.y);\\n\\\n    vec3 position = vec3(xy, zh.x);\\n\\\n    float height = zh.y;\\n\\\n    vec2 textureCoordinates = czm_decompressTextureCoordinates(compressed0.z);\\n\\\n\\n\\\n    height = height * (u_minMaxHeight.y - u_minMaxHeight.x) + u_minMaxHeight.x;\\n\\\n    position = (u_scaleAndBias * vec4(position, 1.0)).xyz;\\n\\\n\\n\\\n#if (defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL)) && defined(INCLUDE_WEB_MERCATOR_Y)\\n\\\n    float webMercatorT = czm_decompressTextureCoordinates(compressed0.w).x;\\n\\\n    float encodedNormal = compressed1;\\n\\\n#elif defined(INCLUDE_WEB_MERCATOR_Y)\\n\\\n    float webMercatorT = czm_decompressTextureCoordinates(compressed0.w).x;\\n\\\n    float encodedNormal = 0.0;\\n\\\n#elif defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL)\\n\\\n    float webMercatorT = textureCoordinates.y;\\n\\\n    float encodedNormal = compressed0.w;\\n\\\n#else\\n\\\n    float webMercatorT = textureCoordinates.y;\\n\\\n    float encodedNormal = 0.0;\\n\\\n#endif\\n\\\n\\n\\\n#else\\n\\\n    // A single float per element\\n\\\n    vec3 position = position3DAndHeight.xyz;\\n\\\n    float height = position3DAndHeight.w;\\n\\\n    vec2 textureCoordinates = textureCoordAndEncodedNormals.xy;\\n\\\n\\n\\\n#if (defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL) || defined(APPLY_MATERIAL)) && defined(INCLUDE_WEB_MERCATOR_Y)\\n\\\n    float webMercatorT = textureCoordAndEncodedNormals.z;\\n\\\n    float encodedNormal = textureCoordAndEncodedNormals.w;\\n\\\n#elif defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL) || defined(APPLY_MATERIAL)\\n\\\n    float webMercatorT = textureCoordinates.y;\\n\\\n    float encodedNormal = textureCoordAndEncodedNormals.z;\\n\\\n#elif defined(INCLUDE_WEB_MERCATOR_Y)\\n\\\n    float webMercatorT = textureCoordAndEncodedNormals.z;\\n\\\n    float encodedNormal = 0.0;\\n\\\n#else\\n\\\n    float webMercatorT = textureCoordinates.y;\\n\\\n    float encodedNormal = 0.0;\\n\\\n#endif\\n\\\n\\n\\\n#endif\\n\\\n\\n\\\n    vec3 position3DWC = position + u_center3D;\\n\\\n    gl_Position = getPosition(position, height, textureCoordinates);\\n\\\n\\n\\\n    v_textureCoordinates = vec3(textureCoordinates, webMercatorT);\\n\\\n\\n\\\n#if defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL) || defined(APPLY_MATERIAL)\\n\\\n    v_positionEC = (u_modifiedModelView * vec4(position, 1.0)).xyz;\\n\\\n    v_positionMC = position3DWC;  // position in model coordinates\\n\\\n    vec3 normalMC = czm_octDecode(encodedNormal);\\n\\\n    v_normalMC = normalMC;\\n\\\n    v_normalEC = czm_normal3D * v_normalMC;\\n\\\n#elif defined(SHOW_REFLECTIVE_OCEAN) || defined(ENABLE_DAYNIGHT_SHADING) || defined(GENERATE_POSITION) || defined(HDR)\\n\\\n    v_positionEC = (u_modifiedModelView * vec4(position, 1.0)).xyz;\\n\\\n    v_positionMC = position3DWC;  // position in model coordinates\\n\\\n#endif\\n\\\n\\n\\\n#if defined(FOG) || defined(GROUND_ATMOSPHERE)\\n\\\n    AtmosphereColor atmosFogColor = computeGroundAtmosphereFromSpace(position3DWC, false, vec3(0.0));\\n\\\n    v_fogMieColor = atmosFogColor.mie;\\n\\\n    v_fogRayleighColor = atmosFogColor.rayleigh;\\n\\\n#endif\\n\\\n\\n\\\n#if defined(FOG) || defined(GROUND_ATMOSPHERE) || defined(UNDERGROUND_COLOR) || defined(TRANSLUCENT)\\n\\\n    v_distance = length((czm_modelView3D * vec4(position3DWC, 1.0)).xyz);\\n\\\n#endif\\n\\\n\\n\\\n#ifdef APPLY_MATERIAL\\n\\\n    float northPoleZ = czm_ellipsoidRadii.z;\\n\\\n    vec3 northPolePositionMC = vec3(0.0, 0.0, northPoleZ);\\n\\\n    vec3 ellipsoidNormal = normalize(v_positionMC); // For a sphere this is correct, but not generally for an ellipsoid.\\n\\\n    vec3 vectorEastMC = normalize(cross(northPolePositionMC - v_positionMC, ellipsoidNormal));\\n\\\n    float dotProd = abs(dot(ellipsoidNormal, v_normalMC));\\n\\\n    v_slope = acos(dotProd);\\n\\\n    vec3 normalRejected = ellipsoidNormal * dotProd;\\n\\\n    vec3 normalProjected = v_normalMC - normalRejected;\\n\\\n    vec3 aspectVector = normalize(normalProjected);\\n\\\n    v_aspect = acos(dot(aspectVector, vectorEastMC));\\n\\\n    float determ = dot(cross(vectorEastMC, aspectVector), ellipsoidNormal);\\n\\\n    v_aspect = czm_branchFreeTernary(determ < 0.0, 2.0 * czm_pi - v_aspect, v_aspect);\\n\\\n    v_height = height;\\n\\\n#endif\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":73,"column":0}},{"generated":{"line":80,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":74,"column":0}},{"generated":{"line":81,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":75,"column":0}},{"generated":{"line":82,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":76,"column":0}},{"generated":{"line":83,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":77,"column":0}},{"generated":{"line":84,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":78,"column":0}},{"generated":{"line":85,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":79,"column":0}},{"generated":{"line":86,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":80,"column":0}},{"generated":{"line":87,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":81,"column":0}},{"generated":{"line":88,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":82,"column":0}},{"generated":{"line":89,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":83,"column":0}},{"generated":{"line":90,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":84,"column":0}},{"generated":{"line":91,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":85,"column":0}},{"generated":{"line":92,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":86,"column":0}},{"generated":{"line":93,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":87,"column":0}},{"generated":{"line":94,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":88,"column":0}},{"generated":{"line":95,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":89,"column":0}},{"generated":{"line":96,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":90,"column":0}},{"generated":{"line":97,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":91,"column":0}},{"generated":{"line":98,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":92,"column":0}},{"generated":{"line":99,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":93,"column":0}},{"generated":{"line":100,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":94,"column":0}},{"generated":{"line":101,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":95,"column":0}},{"generated":{"line":102,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":96,"column":0}},{"generated":{"line":103,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":97,"column":0}},{"generated":{"line":104,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":98,"column":0}},{"generated":{"line":105,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":99,"column":0}},{"generated":{"line":106,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":100,"column":0}},{"generated":{"line":107,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":101,"column":0}},{"generated":{"line":108,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":102,"column":0}},{"generated":{"line":109,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":103,"column":0}},{"generated":{"line":110,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":104,"column":0}},{"generated":{"line":111,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":105,"column":0}},{"generated":{"line":112,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":106,"column":0}},{"generated":{"line":113,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":107,"column":0}},{"generated":{"line":114,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":108,"column":0}},{"generated":{"line":115,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":109,"column":0}},{"generated":{"line":116,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":110,"column":0}},{"generated":{"line":117,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":111,"column":0}},{"generated":{"line":118,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":112,"column":0}},{"generated":{"line":119,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":113,"column":0}},{"generated":{"line":120,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":114,"column":0}},{"generated":{"line":121,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":115,"column":0}},{"generated":{"line":122,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":116,"column":0}},{"generated":{"line":123,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":117,"column":0}},{"generated":{"line":124,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":118,"column":0}},{"generated":{"line":125,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":119,"column":0}},{"generated":{"line":126,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":120,"column":0}},{"generated":{"line":127,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":121,"column":0}},{"generated":{"line":128,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":122,"column":0}},{"generated":{"line":129,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":123,"column":0}},{"generated":{"line":130,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":124,"column":0}},{"generated":{"line":131,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":125,"column":0}},{"generated":{"line":132,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":126,"column":0}},{"generated":{"line":133,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":127,"column":0}},{"generated":{"line":134,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":128,"column":0}},{"generated":{"line":135,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":129,"column":0}},{"generated":{"line":136,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":130,"column":0}},{"generated":{"line":137,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":131,"column":0}},{"generated":{"line":138,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":132,"column":0}},{"generated":{"line":139,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":133,"column":0}},{"generated":{"line":140,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":134,"column":0}},{"generated":{"line":141,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":135,"column":0}},{"generated":{"line":142,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":136,"column":0}},{"generated":{"line":143,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":137,"column":0}},{"generated":{"line":144,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":138,"column":0}},{"generated":{"line":145,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":139,"column":0}},{"generated":{"line":146,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":140,"column":0}},{"generated":{"line":147,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":141,"column":0}},{"generated":{"line":148,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":142,"column":0}},{"generated":{"line":149,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":143,"column":0}},{"generated":{"line":150,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":144,"column":0}},{"generated":{"line":151,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":145,"column":0}},{"generated":{"line":152,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":146,"column":0}},{"generated":{"line":153,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":147,"column":0}},{"generated":{"line":154,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":148,"column":0}},{"generated":{"line":155,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":149,"column":0}},{"generated":{"line":156,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":150,"column":0}},{"generated":{"line":157,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":151,"column":0}},{"generated":{"line":158,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":152,"column":0}},{"generated":{"line":159,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":153,"column":0}},{"generated":{"line":160,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":154,"column":0}},{"generated":{"line":161,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":155,"column":0}},{"generated":{"line":162,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":156,"column":0}},{"generated":{"line":163,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":157,"column":0}},{"generated":{"line":164,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":158,"column":0}},{"generated":{"line":165,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":159,"column":0}},{"generated":{"line":166,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":160,"column":0}},{"generated":{"line":167,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":161,"column":0}},{"generated":{"line":168,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":162,"column":0}},{"generated":{"line":169,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":163,"column":0}},{"generated":{"line":170,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":164,"column":0}},{"generated":{"line":171,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":165,"column":0}},{"generated":{"line":172,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":166,"column":0}},{"generated":{"line":173,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":167,"column":0}},{"generated":{"line":174,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":168,"column":0}},{"generated":{"line":175,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":169,"column":0}},{"generated":{"line":176,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":170,"column":0}},{"generated":{"line":177,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":171,"column":0}},{"generated":{"line":178,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":172,"column":0}},{"generated":{"line":179,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":173,"column":0}},{"generated":{"line":180,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":174,"column":0}},{"generated":{"line":181,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":175,"column":0}},{"generated":{"line":182,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":176,"column":0}},{"generated":{"line":183,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":177,"column":0}},{"generated":{"line":184,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":178,"column":0}},{"generated":{"line":185,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":179,"column":0}},{"generated":{"line":186,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":180,"column":0}},{"generated":{"line":187,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":181,"column":0}},{"generated":{"line":188,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":182,"column":0}},{"generated":{"line":189,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":183,"column":0}},{"generated":{"line":190,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":184,"column":0}},{"generated":{"line":191,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":185,"column":0}},{"generated":{"line":192,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":186,"column":0}},{"generated":{"line":193,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":187,"column":0}},{"generated":{"line":194,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":188,"column":0}},{"generated":{"line":195,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":189,"column":0}},{"generated":{"line":196,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":190,"column":0}},{"generated":{"line":197,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":191,"column":0}},{"generated":{"line":198,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":192,"column":0}},{"generated":{"line":199,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":193,"column":0}},{"generated":{"line":200,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":194,"column":0}},{"generated":{"line":201,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":195,"column":0}},{"generated":{"line":202,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":196,"column":0}},{"generated":{"line":203,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":197,"column":0}},{"generated":{"line":204,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":198,"column":0}},{"generated":{"line":205,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":199,"column":0}},{"generated":{"line":206,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":200,"column":0}},{"generated":{"line":207,"column":0},"source":"node_modules/cesium/Source/Shaders/GlobeVS.js","original":{"line":201,"column":0}}],"sources":{"node_modules/cesium/Source/Shaders/GlobeVS.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"#ifdef QUANTIZATION_BITS12\\n\\\nattribute vec4 compressed0;\\n\\\nattribute float compressed1;\\n\\\n#else\\n\\\nattribute vec4 position3DAndHeight;\\n\\\nattribute vec4 textureCoordAndEncodedNormals;\\n\\\n#endif\\n\\\n\\n\\\nuniform vec3 u_center3D;\\n\\\nuniform mat4 u_modifiedModelView;\\n\\\nuniform mat4 u_modifiedModelViewProjection;\\n\\\nuniform vec4 u_tileRectangle;\\n\\\n\\n\\\n// Uniforms for 2D Mercator projection\\n\\\nuniform vec2 u_southAndNorthLatitude;\\n\\\nuniform vec2 u_southMercatorYAndOneOverHeight;\\n\\\n\\n\\\nvarying vec3 v_positionMC;\\n\\\nvarying vec3 v_positionEC;\\n\\\n\\n\\\nvarying vec3 v_textureCoordinates;\\n\\\nvarying vec3 v_normalMC;\\n\\\nvarying vec3 v_normalEC;\\n\\\n\\n\\\n#ifdef APPLY_MATERIAL\\n\\\nvarying float v_slope;\\n\\\nvarying float v_aspect;\\n\\\nvarying float v_height;\\n\\\n#endif\\n\\\n\\n\\\n#if defined(FOG) || defined(GROUND_ATMOSPHERE) || defined(UNDERGROUND_COLOR) || defined(TRANSLUCENT)\\n\\\nvarying float v_distance;\\n\\\n#endif\\n\\\n\\n\\\n#if defined(FOG) || defined(GROUND_ATMOSPHERE)\\n\\\nvarying vec3 v_fogMieColor;\\n\\\nvarying vec3 v_fogRayleighColor;\\n\\\n#endif\\n\\\n\\n\\\n// These functions are generated at runtime.\\n\\\nvec4 getPosition(vec3 position, float height, vec2 textureCoordinates);\\n\\\nfloat get2DYPositionFraction(vec2 textureCoordinates);\\n\\\n\\n\\\nvec4 getPosition3DMode(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    return u_modifiedModelViewProjection * vec4(position, 1.0);\\n\\\n}\\n\\\n\\n\\\nfloat get2DMercatorYPositionFraction(vec2 textureCoordinates)\\n\\\n{\\n\\\n    // The width of a tile at level 11, in radians and assuming a single root tile, is\\n\\\n    //   2.0 * czm_pi / pow(2.0, 11.0)\\n\\\n    // We want to just linearly interpolate the 2D position from the texture coordinates\\n\\\n    // when we're at this level or higher.  The constant below is the expression\\n\\\n    // above evaluated and then rounded up at the 4th significant digit.\\n\\\n    const float maxTileWidth = 0.003068;\\n\\\n    float positionFraction = textureCoordinates.y;\\n\\\n    float southLatitude = u_southAndNorthLatitude.x;\\n\\\n    float northLatitude = u_southAndNorthLatitude.y;\\n\\\n    if (northLatitude - southLatitude > maxTileWidth)\\n\\\n    {\\n\\\n        float southMercatorY = u_southMercatorYAndOneOverHeight.x;\\n\\\n        float oneOverMercatorHeight = u_southMercatorYAndOneOverHeight.y;\\n\\\n\\n\\\n        float currentLatitude = mix(southLatitude, northLatitude, textureCoordinates.y);\\n\\\n        currentLatitude = clamp(currentLatitude, -czm_webMercatorMaxLatitude, czm_webMercatorMaxLatitude);\\n\\\n        positionFraction = czm_latitudeToWebMercatorFraction(currentLatitude, southMercatorY, oneOverMercatorHeight);\\n\\\n    }\\n\\\n    return positionFraction;\\n\\\n}\\n\\\n\\n\\\nfloat get2DGeographicYPositionFraction(vec2 textureCoordinates)\\n\\\n{\\n\\\n    return textureCoordinates.y;\\n\\\n}\\n\\\n\\n\\\nvec4 getPositionPlanarEarth(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    float yPositionFraction = get2DYPositionFraction(textureCoordinates);\\n\\\n    vec4 rtcPosition2D = vec4(height, mix(u_tileRectangle.st, u_tileRectangle.pq, vec2(textureCoordinates.x, yPositionFraction)), 1.0);\\n\\\n    return u_modifiedModelViewProjection * rtcPosition2D;\\n\\\n}\\n\\\n\\n\\\nvec4 getPosition2DMode(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    return getPositionPlanarEarth(position, 0.0, textureCoordinates);\\n\\\n}\\n\\\n\\n\\\nvec4 getPositionColumbusViewMode(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    return getPositionPlanarEarth(position, height, textureCoordinates);\\n\\\n}\\n\\\n\\n\\\nvec4 getPositionMorphingMode(vec3 position, float height, vec2 textureCoordinates)\\n\\\n{\\n\\\n    // We do not do RTC while morphing, so there is potential for jitter.\\n\\\n    // This is unlikely to be noticeable, though.\\n\\\n    vec3 position3DWC = position + u_center3D;\\n\\\n    float yPositionFraction = get2DYPositionFraction(textureCoordinates);\\n\\\n    vec4 position2DWC = vec4(height, mix(u_tileRectangle.st, u_tileRectangle.pq, vec2(textureCoordinates.x, yPositionFraction)), 1.0);\\n\\\n    vec4 morphPosition = czm_columbusViewMorph(position2DWC, vec4(position3DWC, 1.0), czm_morphTime);\\n\\\n    return czm_modelViewProjection * morphPosition;\\n\\\n}\\n\\\n\\n\\\n#ifdef QUANTIZATION_BITS12\\n\\\nuniform vec2 u_minMaxHeight;\\n\\\nuniform mat4 u_scaleAndBias;\\n\\\n#endif\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n#ifdef QUANTIZATION_BITS12\\n\\\n    vec2 xy = czm_decompressTextureCoordinates(compressed0.x);\\n\\\n    vec2 zh = czm_decompressTextureCoordinates(compressed0.y);\\n\\\n    vec3 position = vec3(xy, zh.x);\\n\\\n    float height = zh.y;\\n\\\n    vec2 textureCoordinates = czm_decompressTextureCoordinates(compressed0.z);\\n\\\n\\n\\\n    height = height * (u_minMaxHeight.y - u_minMaxHeight.x) + u_minMaxHeight.x;\\n\\\n    position = (u_scaleAndBias * vec4(position, 1.0)).xyz;\\n\\\n\\n\\\n#if (defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL)) && defined(INCLUDE_WEB_MERCATOR_Y)\\n\\\n    float webMercatorT = czm_decompressTextureCoordinates(compressed0.w).x;\\n\\\n    float encodedNormal = compressed1;\\n\\\n#elif defined(INCLUDE_WEB_MERCATOR_Y)\\n\\\n    float webMercatorT = czm_decompressTextureCoordinates(compressed0.w).x;\\n\\\n    float encodedNormal = 0.0;\\n\\\n#elif defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL)\\n\\\n    float webMercatorT = textureCoordinates.y;\\n\\\n    float encodedNormal = compressed0.w;\\n\\\n#else\\n\\\n    float webMercatorT = textureCoordinates.y;\\n\\\n    float encodedNormal = 0.0;\\n\\\n#endif\\n\\\n\\n\\\n#else\\n\\\n    // A single float per element\\n\\\n    vec3 position = position3DAndHeight.xyz;\\n\\\n    float height = position3DAndHeight.w;\\n\\\n    vec2 textureCoordinates = textureCoordAndEncodedNormals.xy;\\n\\\n\\n\\\n#if (defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL) || defined(APPLY_MATERIAL)) && defined(INCLUDE_WEB_MERCATOR_Y)\\n\\\n    float webMercatorT = textureCoordAndEncodedNormals.z;\\n\\\n    float encodedNormal = textureCoordAndEncodedNormals.w;\\n\\\n#elif defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL) || defined(APPLY_MATERIAL)\\n\\\n    float webMercatorT = textureCoordinates.y;\\n\\\n    float encodedNormal = textureCoordAndEncodedNormals.z;\\n\\\n#elif defined(INCLUDE_WEB_MERCATOR_Y)\\n\\\n    float webMercatorT = textureCoordAndEncodedNormals.z;\\n\\\n    float encodedNormal = 0.0;\\n\\\n#else\\n\\\n    float webMercatorT = textureCoordinates.y;\\n\\\n    float encodedNormal = 0.0;\\n\\\n#endif\\n\\\n\\n\\\n#endif\\n\\\n\\n\\\n    vec3 position3DWC = position + u_center3D;\\n\\\n    gl_Position = getPosition(position, height, textureCoordinates);\\n\\\n\\n\\\n    v_textureCoordinates = vec3(textureCoordinates, webMercatorT);\\n\\\n\\n\\\n#if defined(ENABLE_VERTEX_LIGHTING) || defined(GENERATE_POSITION_AND_NORMAL) || defined(APPLY_MATERIAL)\\n\\\n    v_positionEC = (u_modifiedModelView * vec4(position, 1.0)).xyz;\\n\\\n    v_positionMC = position3DWC;  // position in model coordinates\\n\\\n    vec3 normalMC = czm_octDecode(encodedNormal);\\n\\\n    v_normalMC = normalMC;\\n\\\n    v_normalEC = czm_normal3D * v_normalMC;\\n\\\n#elif defined(SHOW_REFLECTIVE_OCEAN) || defined(ENABLE_DAYNIGHT_SHADING) || defined(GENERATE_POSITION) || defined(HDR)\\n\\\n    v_positionEC = (u_modifiedModelView * vec4(position, 1.0)).xyz;\\n\\\n    v_positionMC = position3DWC;  // position in model coordinates\\n\\\n#endif\\n\\\n\\n\\\n#if defined(FOG) || defined(GROUND_ATMOSPHERE)\\n\\\n    AtmosphereColor atmosFogColor = computeGroundAtmosphereFromSpace(position3DWC, false, vec3(0.0));\\n\\\n    v_fogMieColor = atmosFogColor.mie;\\n\\\n    v_fogRayleighColor = atmosFogColor.rayleigh;\\n\\\n#endif\\n\\\n\\n\\\n#if defined(FOG) || defined(GROUND_ATMOSPHERE) || defined(UNDERGROUND_COLOR) || defined(TRANSLUCENT)\\n\\\n    v_distance = length((czm_modelView3D * vec4(position3DWC, 1.0)).xyz);\\n\\\n#endif\\n\\\n\\n\\\n#ifdef APPLY_MATERIAL\\n\\\n    float northPoleZ = czm_ellipsoidRadii.z;\\n\\\n    vec3 northPolePositionMC = vec3(0.0, 0.0, northPoleZ);\\n\\\n    vec3 ellipsoidNormal = normalize(v_positionMC); // For a sphere this is correct, but not generally for an ellipsoid.\\n\\\n    vec3 vectorEastMC = normalize(cross(northPolePositionMC - v_positionMC, ellipsoidNormal));\\n\\\n    float dotProd = abs(dot(ellipsoidNormal, v_normalMC));\\n\\\n    v_slope = acos(dotProd);\\n\\\n    vec3 normalRejected = ellipsoidNormal * dotProd;\\n\\\n    vec3 normalProjected = v_normalMC - normalRejected;\\n\\\n    vec3 aspectVector = normalize(normalProjected);\\n\\\n    v_aspect = acos(dot(aspectVector, vectorEastMC));\\n\\\n    float determ = dot(cross(vectorEastMC, aspectVector), ellipsoidNormal);\\n\\\n    v_aspect = czm_branchFreeTernary(determ < 0.0, 2.0 * czm_pi - v_aspect, v_aspect);\\n\\\n    v_height = height;\\n\\\n#endif\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"9ee9b595671412e782d4175aa6a5614a","cacheData":{"env":{}}}