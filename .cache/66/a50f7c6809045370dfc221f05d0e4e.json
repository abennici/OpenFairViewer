{"id":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","dependencies":[{"name":"D:\\Documents\\DEV\\ol6\\package.json","includedInParent":true,"mtime":1603819498857},{"name":"D:\\Documents\\DEV\\ol6\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1603819498545}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"/**\\n\\\n * Branchless ternary operator to be used when it's inexpensive to explicitly\\n\\\n * evaluate both possibilities for a float expression.\\n\\\n *\\n\\\n * @name czm_branchFreeTernary\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {bool} comparison A comparison statement\\n\\\n * @param {float} a Value to return if the comparison is true.\\n\\\n * @param {float} b Value to return if the comparison is false.\\n\\\n *\\n\\\n * @returns {float} equivalent of comparison ? a : b\\n\\\n */\\n\\\nfloat czm_branchFreeTernary(bool comparison, float a, float b) {\\n\\\n    float useA = float(comparison);\\n\\\n    return a * useA + b * (1.0 - useA);\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n * Branchless ternary operator to be used when it's inexpensive to explicitly\\n\\\n * evaluate both possibilities for a vec2 expression.\\n\\\n *\\n\\\n * @name czm_branchFreeTernary\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {bool} comparison A comparison statement\\n\\\n * @param {vec2} a Value to return if the comparison is true.\\n\\\n * @param {vec2} b Value to return if the comparison is false.\\n\\\n *\\n\\\n * @returns {vec2} equivalent of comparison ? a : b\\n\\\n */\\n\\\nvec2 czm_branchFreeTernary(bool comparison, vec2 a, vec2 b) {\\n\\\n    float useA = float(comparison);\\n\\\n    return a * useA + b * (1.0 - useA);\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n * Branchless ternary operator to be used when it's inexpensive to explicitly\\n\\\n * evaluate both possibilities for a vec3 expression.\\n\\\n *\\n\\\n * @name czm_branchFreeTernary\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {bool} comparison A comparison statement\\n\\\n * @param {vec3} a Value to return if the comparison is true.\\n\\\n * @param {vec3} b Value to return if the comparison is false.\\n\\\n *\\n\\\n * @returns {vec3} equivalent of comparison ? a : b\\n\\\n */\\n\\\nvec3 czm_branchFreeTernary(bool comparison, vec3 a, vec3 b) {\\n\\\n    float useA = float(comparison);\\n\\\n    return a * useA + b * (1.0 - useA);\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n * Branchless ternary operator to be used when it's inexpensive to explicitly\\n\\\n * evaluate both possibilities for a vec4 expression.\\n\\\n *\\n\\\n * @name czm_branchFreeTernary\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {bool} comparison A comparison statement\\n\\\n * @param {vec3} a Value to return if the comparison is true.\\n\\\n * @param {vec3} b Value to return if the comparison is false.\\n\\\n *\\n\\\n * @returns {vec3} equivalent of comparison ? a : b\\n\\\n */\\n\\\nvec4 czm_branchFreeTernary(bool comparison, vec4 a, vec4 b) {\\n\\\n    float useA = float(comparison);\\n\\\n    return a * useA + b * (1.0 - useA);\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":31,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":32,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":34,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":35,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":36,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":37,"column":0}},{"generated":{"line":44,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":38,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":39,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":40,"column":0}},{"generated":{"line":47,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":41,"column":0}},{"generated":{"line":48,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":42,"column":0}},{"generated":{"line":49,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":43,"column":0}},{"generated":{"line":50,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":44,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":45,"column":0}},{"generated":{"line":52,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":46,"column":0}},{"generated":{"line":53,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":47,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":48,"column":0}},{"generated":{"line":55,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":49,"column":0}},{"generated":{"line":56,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":50,"column":0}},{"generated":{"line":57,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":51,"column":0}},{"generated":{"line":58,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":52,"column":0}},{"generated":{"line":59,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":53,"column":0}},{"generated":{"line":60,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":54,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":55,"column":0}},{"generated":{"line":62,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":56,"column":0}},{"generated":{"line":63,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":57,"column":0}},{"generated":{"line":64,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":58,"column":0}},{"generated":{"line":65,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":59,"column":0}},{"generated":{"line":66,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":60,"column":0}},{"generated":{"line":67,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":61,"column":0}},{"generated":{"line":68,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":62,"column":0}},{"generated":{"line":69,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":63,"column":0}},{"generated":{"line":70,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":65,"column":0}},{"generated":{"line":72,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":66,"column":0}},{"generated":{"line":73,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":67,"column":0}},{"generated":{"line":74,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":68,"column":0}},{"generated":{"line":75,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":69,"column":0}},{"generated":{"line":76,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":70,"column":0}},{"generated":{"line":77,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":71,"column":0}},{"generated":{"line":78,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":72,"column":0}},{"generated":{"line":79,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js","original":{"line":73,"column":0}}],"sources":{"node_modules/cesium/Source/Shaders/Builtin/Functions/branchFreeTernary.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * Branchless ternary operator to be used when it's inexpensive to explicitly\\n\\\n * evaluate both possibilities for a float expression.\\n\\\n *\\n\\\n * @name czm_branchFreeTernary\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {bool} comparison A comparison statement\\n\\\n * @param {float} a Value to return if the comparison is true.\\n\\\n * @param {float} b Value to return if the comparison is false.\\n\\\n *\\n\\\n * @returns {float} equivalent of comparison ? a : b\\n\\\n */\\n\\\nfloat czm_branchFreeTernary(bool comparison, float a, float b) {\\n\\\n    float useA = float(comparison);\\n\\\n    return a * useA + b * (1.0 - useA);\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n * Branchless ternary operator to be used when it's inexpensive to explicitly\\n\\\n * evaluate both possibilities for a vec2 expression.\\n\\\n *\\n\\\n * @name czm_branchFreeTernary\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {bool} comparison A comparison statement\\n\\\n * @param {vec2} a Value to return if the comparison is true.\\n\\\n * @param {vec2} b Value to return if the comparison is false.\\n\\\n *\\n\\\n * @returns {vec2} equivalent of comparison ? a : b\\n\\\n */\\n\\\nvec2 czm_branchFreeTernary(bool comparison, vec2 a, vec2 b) {\\n\\\n    float useA = float(comparison);\\n\\\n    return a * useA + b * (1.0 - useA);\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n * Branchless ternary operator to be used when it's inexpensive to explicitly\\n\\\n * evaluate both possibilities for a vec3 expression.\\n\\\n *\\n\\\n * @name czm_branchFreeTernary\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {bool} comparison A comparison statement\\n\\\n * @param {vec3} a Value to return if the comparison is true.\\n\\\n * @param {vec3} b Value to return if the comparison is false.\\n\\\n *\\n\\\n * @returns {vec3} equivalent of comparison ? a : b\\n\\\n */\\n\\\nvec3 czm_branchFreeTernary(bool comparison, vec3 a, vec3 b) {\\n\\\n    float useA = float(comparison);\\n\\\n    return a * useA + b * (1.0 - useA);\\n\\\n}\\n\\\n\\n\\\n/**\\n\\\n * Branchless ternary operator to be used when it's inexpensive to explicitly\\n\\\n * evaluate both possibilities for a vec4 expression.\\n\\\n *\\n\\\n * @name czm_branchFreeTernary\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {bool} comparison A comparison statement\\n\\\n * @param {vec3} a Value to return if the comparison is true.\\n\\\n * @param {vec3} b Value to return if the comparison is false.\\n\\\n *\\n\\\n * @returns {vec3} equivalent of comparison ? a : b\\n\\\n */\\n\\\nvec4 czm_branchFreeTernary(bool comparison, vec4 a, vec4 b) {\\n\\\n    float useA = float(comparison);\\n\\\n    return a * useA + b * (1.0 - useA);\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"2c45c46bfb43e4d430e152c2fcc4ad8b","cacheData":{"env":{}}}