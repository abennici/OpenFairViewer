{"id":"node_modules/cesium/Source/Core/GeocoderService.js","dependencies":[{"name":"D:\\Documents\\DEV\\ol6\\package.json","includedInParent":true,"mtime":1603819498857},{"name":"D:\\Documents\\DEV\\ol6\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1603819498545},{"name":"./DeveloperError.js","loc":{"line":1,"column":27},"parent":"D:\\Documents\\DEV\\ol6\\node_modules\\cesium\\Source\\Core\\GeocoderService.js","resolved":"D:\\Documents\\DEV\\ol6\\node_modules\\cesium\\Source\\Core\\DeveloperError.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _DeveloperError = _interopRequireDefault(require(\"./DeveloperError.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @typedef {Object} GeocoderService.Result\n * @property {String} displayName The display name for a location\n * @property {Rectangle|Cartesian3} destination The bounding box for a location\n */\n\n/**\n * Provides geocoding through an external service. This type describes an interface and\n * is not intended to be used.\n * @alias GeocoderService\n * @constructor\n *\n * @see BingMapsGeocoderService\n * @see PeliasGeocoderService\n * @see OpenCageGeocoderService\n */\nfunction GeocoderService() {}\n/**\n * @function\n *\n * @param {String} query The query to be sent to the geocoder service\n * @param {GeocodeType} [type=GeocodeType.SEARCH] The type of geocode to perform.\n * @returns {Promise<GeocoderService.Result[]>}\n */\n\n\nGeocoderService.prototype.geocode = _DeveloperError.default.throwInstantiationError;\nvar _default = GeocoderService;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":4,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":5,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":7,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":9,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":10,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":11,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":12,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":14,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":15,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":16,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":18,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":19,"column":0}},{"name":"GeocoderService","generated":{"line":28,"column":9},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":19,"column":9}},{"generated":{"line":28,"column":24},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":19,"column":0}},{"generated":{"line":28,"column":27},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":19,"column":27}},{"generated":{"line":28,"column":28},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":19,"column":29}},{"generated":{"line":29,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":21,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":22,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":23,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":24,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":25,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":26,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":27,"column":0}},{"name":"GeocoderService","generated":{"line":38,"column":0},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":28,"column":0}},{"generated":{"line":38,"column":15},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":28,"column":15}},{"name":"prototype","generated":{"line":38,"column":16},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":28,"column":16}},{"generated":{"line":38,"column":25},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":28,"column":0}},{"name":"geocode","generated":{"line":38,"column":26},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":28,"column":26}},{"generated":{"line":38,"column":33},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":28,"column":0}},{"name":"DeveloperError","generated":{"line":38,"column":36},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":28,"column":36}},{"name":"throwInstantiationError","generated":{"line":38,"column":60},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":28,"column":51}},{"generated":{"line":38,"column":83},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":28,"column":0}},{"name":"GeocoderService","generated":{"line":39,"column":15},"source":"node_modules/cesium/Source/Core/GeocoderService.js","original":{"line":29,"column":15}}],"sources":{"node_modules/cesium/Source/Core/GeocoderService.js":"import DeveloperError from \"./DeveloperError.js\";\n\n/**\n * @typedef {Object} GeocoderService.Result\n * @property {String} displayName The display name for a location\n * @property {Rectangle|Cartesian3} destination The bounding box for a location\n */\n\n/**\n * Provides geocoding through an external service. This type describes an interface and\n * is not intended to be used.\n * @alias GeocoderService\n * @constructor\n *\n * @see BingMapsGeocoderService\n * @see PeliasGeocoderService\n * @see OpenCageGeocoderService\n */\nfunction GeocoderService() {}\n\n/**\n * @function\n *\n * @param {String} query The query to be sent to the geocoder service\n * @param {GeocodeType} [type=GeocodeType.SEARCH] The type of geocode to perform.\n * @returns {Promise<GeocoderService.Result[]>}\n */\nGeocoderService.prototype.geocode = DeveloperError.throwInstantiationError;\nexport default GeocoderService;\n"},"lineCount":null}},"error":null,"hash":"a7f247f1c1f224df6704d8b75004582a","cacheData":{"env":{}}}