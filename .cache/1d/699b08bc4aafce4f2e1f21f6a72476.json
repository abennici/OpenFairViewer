{"id":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","dependencies":[{"name":"D:\\Documents\\DEV\\ol6\\package.json","includedInParent":true,"mtime":1603819498857},{"name":"D:\\Documents\\DEV\\ol6\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1603819498545}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"// emulated noperspective\\n\\\n#if defined(GL_EXT_frag_depth) && !defined(LOG_DEPTH)\\n\\\nvarying float v_WindowZ;\\n\\\n#endif\\n\\\n\\n\\\n/**\\n\\\n * Emulates GL_DEPTH_CLAMP. Clamps a fragment to the near and far plane\\n\\\n * by writing the fragment's depth. See czm_depthClamp for more details.\\n\\\n * <p>\\n\\\n * The shader must enable the GL_EXT_frag_depth extension.\\n\\\n * </p>\\n\\\n *\\n\\\n * @name czm_writeDepthClamp\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @example\\n\\\n * gl_FragColor = color;\\n\\\n * czm_writeDepthClamp();\\n\\\n *\\n\\\n * @see czm_depthClamp\\n\\\n */\\n\\\nvoid czm_writeDepthClamp()\\n\\\n{\\n\\\n#if defined(GL_EXT_frag_depth) && !defined(LOG_DEPTH)\\n\\\n    gl_FragDepthEXT = clamp(v_WindowZ * gl_FragCoord.w, 0.0, 1.0);\\n\\\n#endif\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js","original":{"line":29,"column":0}}],"sources":{"node_modules/cesium/Source/Shaders/Builtin/Functions/writeDepthClamp.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"// emulated noperspective\\n\\\n#if defined(GL_EXT_frag_depth) && !defined(LOG_DEPTH)\\n\\\nvarying float v_WindowZ;\\n\\\n#endif\\n\\\n\\n\\\n/**\\n\\\n * Emulates GL_DEPTH_CLAMP. Clamps a fragment to the near and far plane\\n\\\n * by writing the fragment's depth. See czm_depthClamp for more details.\\n\\\n * <p>\\n\\\n * The shader must enable the GL_EXT_frag_depth extension.\\n\\\n * </p>\\n\\\n *\\n\\\n * @name czm_writeDepthClamp\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @example\\n\\\n * gl_FragColor = color;\\n\\\n * czm_writeDepthClamp();\\n\\\n *\\n\\\n * @see czm_depthClamp\\n\\\n */\\n\\\nvoid czm_writeDepthClamp()\\n\\\n{\\n\\\n#if defined(GL_EXT_frag_depth) && !defined(LOG_DEPTH)\\n\\\n    gl_FragDepthEXT = clamp(v_WindowZ * gl_FragCoord.w, 0.0, 1.0);\\n\\\n#endif\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"3a6736f453cc35c8e9e93ab3451f6b84","cacheData":{"env":{}}}