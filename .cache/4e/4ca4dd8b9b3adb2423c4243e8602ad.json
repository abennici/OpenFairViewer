{"id":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","dependencies":[{"name":"D:\\Documents\\DEV\\ol6\\package.json","includedInParent":true,"mtime":1603819498857},{"name":"D:\\Documents\\DEV\\ol6\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1603819498545}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"uniform vec4 lightColor;\\n\\\nuniform vec4 darkColor;\\n\\\nuniform vec2 repeat;\\n\\\n\\n\\\nczm_material czm_getMaterial(czm_materialInput materialInput)\\n\\\n{\\n\\\n    czm_material material = czm_getDefaultMaterial(materialInput);\\n\\\n\\n\\\n    vec2 st = materialInput.st;\\n\\\n\\n\\\n    // From Stefan Gustavson's Procedural Textures in GLSL in OpenGL Insights\\n\\\n    float b = mod(floor(repeat.s * st.s) + floor(repeat.t * st.t), 2.0);  // 0.0 or 1.0\\n\\\n\\n\\\n    // Find the distance from the closest separator (region between two colors)\\n\\\n    float scaledWidth = fract(repeat.s * st.s);\\n\\\n    scaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));\\n\\\n    float scaledHeight = fract(repeat.t * st.t);\\n\\\n    scaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));\\n\\\n    float value = min(scaledWidth, scaledHeight);\\n\\\n\\n\\\n    vec4 currentColor = mix(lightColor, darkColor, b);\\n\\\n    vec4 color = czm_antialias(lightColor, darkColor, currentColor, value, 0.03);\\n\\\n\\n\\\n    color = czm_gammaCorrect(color);\\n\\\n    material.diffuse = color.rgb;\\n\\\n    material.alpha = color.a;\\n\\\n\\n\\\n    return material;\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":2,"column":15}},{"generated":{"line":9,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js","original":{"line":31,"column":0}}],"sources":{"node_modules/cesium/Source/Shaders/Materials/CheckerboardMaterial.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"uniform vec4 lightColor;\\n\\\nuniform vec4 darkColor;\\n\\\nuniform vec2 repeat;\\n\\\n\\n\\\nczm_material czm_getMaterial(czm_materialInput materialInput)\\n\\\n{\\n\\\n    czm_material material = czm_getDefaultMaterial(materialInput);\\n\\\n\\n\\\n    vec2 st = materialInput.st;\\n\\\n\\n\\\n    // From Stefan Gustavson's Procedural Textures in GLSL in OpenGL Insights\\n\\\n    float b = mod(floor(repeat.s * st.s) + floor(repeat.t * st.t), 2.0);  // 0.0 or 1.0\\n\\\n\\n\\\n    // Find the distance from the closest separator (region between two colors)\\n\\\n    float scaledWidth = fract(repeat.s * st.s);\\n\\\n    scaledWidth = abs(scaledWidth - floor(scaledWidth + 0.5));\\n\\\n    float scaledHeight = fract(repeat.t * st.t);\\n\\\n    scaledHeight = abs(scaledHeight - floor(scaledHeight + 0.5));\\n\\\n    float value = min(scaledWidth, scaledHeight);\\n\\\n\\n\\\n    vec4 currentColor = mix(lightColor, darkColor, b);\\n\\\n    vec4 color = czm_antialias(lightColor, darkColor, currentColor, value, 0.03);\\n\\\n\\n\\\n    color = czm_gammaCorrect(color);\\n\\\n    material.diffuse = color.rgb;\\n\\\n    material.alpha = color.a;\\n\\\n\\n\\\n    return material;\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"79ddbe671af05771cb79417745d88ca8","cacheData":{"env":{}}}